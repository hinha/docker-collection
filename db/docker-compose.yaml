volumes:
  pg_data:
    driver: local
  mysql_data:
    driver: local

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  POSTGRES_USERNAME: ${POSTGRES_USERNAME}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  POSTGRES_DB: ${POSTGRES_DB}
  POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
  PGDATA: /var/lib/postgresql/data/pgdata
  MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  MYSQL_DATABASE: ${MYSQL_DATABASE}
  MYSQL_USER: ${MYSQL_USER}
  MYSQL_PASSWORD: ${MYSQL_PASSWORD}

networks:
  shared:
    external: true
    name: postgresql
  
services:
  postgresdb:
    container_name: postgredb
    hostname: postgresql
    image: postgres:14.1-alpine
    restart: unless-stopped
    volumes:
      - ./pg_sql:/docker-entrypoint-initdb.d
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - shared
    environment:
      <<: *shared_environment
    ports:
      - '5432:5432'

  mysqldb:
    container_name: mysqldb
    hostname: mysql
    image: mysql:8.0
    restart: unless-stopped
    environment:
      <<: *shared_environment
    ports:
      - "3306:3306"
    volumes:
      - ./db_mysql:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
      